// ==========================================================================
// Scaffolding
// ==========================================================================

// config

$gutter: 10px;
// Computed

$computed: (
    'm': 'margin', 
    'p': padding
    );
$side: (
    't': "top", 
    'b': "bottom", 
    'l': "left", 
    'r': "right", 
    'y': 'vertical', 
    'x': 'horizontal'
    );
$size: (1, 2, 3, 4, 5);

// Breakpoints
$breakpoints: (
    'xs': 575px,
    'sm': 576px,
    'md': 798px,
    'lg': 992px,
    'xl': 1200px,
);


// Flex
$columns: (
    auto, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
);

//  Functions
@function gutter($target, $gutter: 10) {
    @return (($target * $gutter) / 16) * 1rem;
}

@function per-col($target, $cols: 12) {
    @return ($target / $cols) * 100%;
}
// Mixins
@mixin computed($map-computed, $map-side, $map-size) {

    @each $class-computed,
    $computed in $map_computed {
        @each $size in $map_size {

            @each $class-side,
            $side in $map_side {
                $rule: $computed;
                $value: gutter($size);

                @if $class-side=='y' {
                    $value: gutter($size) 0;
                }

                @else if $class-side=='x' {
                    $value: 0 gutter($size);
                }

                @else {
                    $rule: '#{$computed}-#{$side}'
                }

                .#{$class-computed}#{$class-side}-#{$size} {
                    #{$rule}: $value;
                }

                ;

            }
        }
    }
}

// Media queries

@mixin mq($break) {
    $value: map-get($breakpoints, $break);
    $sm: map-get($breakpoints, 'sm');

    @if $value < $sm {
      @media (min-width: 0px) {
        @content;
      }
    }
    @else {
      @media (min-width: $value) {
        @content;
      }
    }
  }



// Flex columns
@mixin col ($breakpoint-map, $columns-map) {
    %grid-column {
        width: 100%;
        min-height: 1px; 
        padding-right: ($gutter / 2);
        padding-left: ($gutter / 2);
      }

    @each $breakpoint, $value in $breakpoint-map {
        @each $number-col in $columns-map {
            $perc-col: 0;
            $grow: 1;
            $shrink: null;
            $width: 100%;
            $max-width: 100%;
            $class: 'col';
            
            @if $breakpoint != 'xs' {
                $class: 'col-#{$breakpoint}';
            } 
    
            @if $number-col != 0 {
                @if $number-col != auto {
                    $class: '#{$class}-#{$number-col}';
                    $perc-col: per-col($number-col);
                    $max-width: $perc-col;
                }
                @else {
                    $class: '#{$class}-auto';
                    $grow: 0;
                    $shrink: 0;
                    $perc-col: auto;
                    $max-width: none;
                    $width: auto;
                }
            }
            .#{$class}{
                @extend %grid-column; 
            }
            @include mq($breakpoint) {
                .#{$class}{
                    
                    flex: $grow $shrink $perc-col;
                    width: $width;
                    max-width: $max-width;
                }
            }
        }
    }
}
